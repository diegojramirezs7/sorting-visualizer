{"ast":null,"code":"var _jsxFileName = \"/Users/diego_ramirezs/Documents/sorting/visualizer/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SingleContainer from './components/SingleContainer';\nimport DoubleContainer from './components/DoubleContainer';\nimport MultipleContainer from './components/MultipleContainer';\nimport Header from './components/Header'; //import bubblesort from './algorithms/bubblesort';\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nconst requestAnimationFrame = window.requestAnimationFrame;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      array: [],\n      active1: 100,\n      active2: 100,\n      algorithm: 'bubblesort'\n    };\n\n    this.handleNewArray = () => {\n      const arr = [];\n\n      for (var i = 0; i < 100; i++) {\n        var rand = Math.ceil(Math.random() * 100);\n        arr.push({\n          key: i,\n          value: rand\n        });\n      }\n\n      this.setState({\n        array: arr\n      });\n    };\n\n    this.algorithmSelection = event => {\n      this.setState({\n        algorithm: event.target.value\n      });\n    };\n\n    this.timer = ms => {\n      return new Promise(res => setTimeout(res, ms));\n    };\n\n    this.tim = ms => {\n      return new Promise(res => setTimeout(res, ms));\n    };\n\n    this.bubblesort = delay => {\n      list = this.state.array;\n      const length = list.length;\n\n      for (var i = length - 1; i >= 0; i--) {\n        for (var j = 1; j <= i; j++) {\n          if (list[j - 1].value > list[j].value) {\n            let temp = list[j - 1];\n            list[j - 1] = list[j];\n            list[j] = temp;\n          }\n\n          this.setState({\n            array: list,\n            active1: list[j - 1].key,\n            active2: list[j].key\n          }); //await this.timer(0);\n\n          requestAnimationFrame(this.bubblesort);\n        }\n\n        this.setState({\n          active1: 100,\n          active2: 100\n        });\n      }\n\n      return list;\n    };\n\n    this.merge = (left, right) => {\n      let list = [];\n\n      while (left.length && right.length) {\n        if (left[0].value < right[0].value) {\n          list.push(left.shift());\n        } else {\n          list.push(right.shift());\n        }\n\n        var res = [...list, ...left, ...right];\n        this.setState({\n          array: res\n        }); //await this.timer(5);\n      }\n\n      return res;\n    };\n\n    this.mergesort = list => {\n      let half = list.length / 2;\n\n      if (list.length < 2) {\n        return list;\n      }\n\n      const left = list.splice(0, half);\n      let res = this.merge(this.mergesort(left), this.mergesort(list));\n      return res;\n    };\n\n    this.selectionsort = async list => {\n      let length = list.length;\n\n      for (var i = 0; i < length; i++) {\n        var min = i;\n\n        for (var j = i + 1; j < length; j++) {\n          // Executing statement comparison\n          if (list[min].value > list[j].value) {\n            // Updating our current min index to iterate\n            min = j;\n          }\n\n          this.setState({\n            array: list,\n            active1: list[j].key,\n            active2: list[min].key\n          });\n          await this.timer(2);\n        } // Swaping values\n\n\n        if (min !== i) {\n          let temp = list[i];\n          list[i] = list[min];\n          list[min] = temp;\n        }\n      }\n\n      this.setState({\n        active1: 100,\n        active2: 100\n      });\n      return list;\n    };\n\n    this.insertionsort = async list => {\n      let auxArray = list.slice();\n      let length = list.length;\n\n      for (let i = 1; i < length; i++) {\n        let key = list[i];\n        let j = i - 1;\n\n        while (j >= 0 && list[j].value > key.value) {\n          this.setState({\n            active1: j,\n            active2: key\n          });\n          await this.tim(5);\n          list[j + 1] = list[j];\n          j--;\n        }\n\n        list[j + 1] = key;\n        this.setState({\n          array: list\n        });\n      }\n\n      return list;\n    };\n\n    this.onStart = () => {\n      //const newArray = [...this.state.array];\n      // for(var i = 0; i<newArray.length; i++){\n      //   newArray[i] = 77;\n      // }\n      // this.setState({active2: 7})\n      requestAnimationFrame(this.bubblesort); // let algorithm = this.state.algorithm;\n      // if(algorithm === 'bubblesort'){\n      //   this.bubblesort(this.state.array)\n      // }else if (algorithm === 'selectionsort') {\n      //   this.selectionsort(this.state.array);\n      // }else if(algorithm === 'insertionsort'){\n      //   \n      // }\n    };\n  }\n\n  componentDidMount() {\n    this.handleNewArray();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      handleNewArray: this.handleNewArray,\n      onStart: this.onStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/doubleContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DoubleContainer, {\n      array: this.state.array,\n      arraySize: this.state.array.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/multipleContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MultipleContainer, {\n      array: this.state.array,\n      arraySize: this.state.array.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SingleContainer, {\n      array: this.state.array,\n      arraySize: this.state.array.length,\n      active1: this.state.active1,\n      active2: this.state.active2,\n      algorithm: this.state.algorithm,\n      algorithmSelection: this.algorithmSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/diego_ramirezs/Documents/sorting/visualizer/src/App.js"],"names":["React","SingleContainer","DoubleContainer","MultipleContainer","Header","HashRouter","Router","Switch","Route","requestAnimationFrame","window","App","Component","state","array","active1","active2","algorithm","handleNewArray","arr","i","rand","Math","ceil","random","push","key","value","setState","algorithmSelection","event","target","timer","ms","Promise","res","setTimeout","tim","bubblesort","delay","list","length","j","temp","merge","left","right","shift","mergesort","half","splice","selectionsort","min","insertionsort","auxArray","slice","onStart","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SingleContainer from './components/SingleContainer';\nimport DoubleContainer from './components/DoubleContainer';\nimport MultipleContainer from './components/MultipleContainer';\nimport Header from './components/Header';\n//import bubblesort from './algorithms/bubblesort';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nconst requestAnimationFrame = window.requestAnimationFrame\n\nclass App extends React.Component {\n  state = {\n    array: [], \n    active1: 100,\n    active2: 100,\n    algorithm: 'bubblesort'\n  }\n\n  handleNewArray = () => {\n    const arr = [];\n    for (var i = 0; i<100; i++){\n      var rand = Math.ceil(Math.random() * 100);\n      arr.push({key: i, value: rand});\n    }\n    this.setState({\n      array: arr\n    })\n  }\n\n  componentDidMount(){\n    this.handleNewArray();\n  }\n\n  algorithmSelection = (event) => {\n      this.setState({\n        algorithm: event.target.value\n      })\n    }\n\n  timer = (ms) => {\n    return new Promise(res => setTimeout(res, ms));\n  }\n\n  tim = (ms) => {\n    return new Promise(res => setTimeout(res, ms));\n  }\n\n  //bubble sort\n\n  bubblesort =  (delay) => {\n    list = this.state.array\n    const length = list.length;\n    for(var i = length - 1; i>=0; i--){\n      for(var j = 1; j<=i; j++){\n        \n        if(list[j-1].value > list[j].value){\n          let temp = list[j-1];\n          list[j-1] = list[j];\n          list[j] = temp;\n        }\n        this.setState({\n          array: list,\n          active1: list[j-1].key,\n          active2: list[j].key\n        })\n        //await this.timer(0);\n        requestAnimationFrame(this.bubblesort)\n      }\n      this.setState({\n        active1: 100,\n        active2: 100\n      })\n    }\n    return list\n  }\n\n  //merge sort\n\n  merge =  (left, right) => {\n    let list = [];\n    while(left.length && right.length){\n      if(left[0].value < right[0].value){\n        list.push(left.shift());\n      }else{\n        list.push(right.shift());\n      }\n      var res = [...list, ...left, ...right];\n      this.setState({array: res})\n      //await this.timer(5);\n    }\n    return res\n  }\n\n  mergesort = (list) => {\n    let half = list.length/2;\n    if(list.length < 2){\n      return list;\n    }\n\n    const left = list.splice(0,half);\n\n    let res = this.merge(this.mergesort(left), this.mergesort(list));\n    return res\n  }\n\n  selectionsort = async (list) => {\n    let length = list.length;\n  \n    for(var i = 0; i < length; i++) {\n        \n        var min = i;\n        for(var j = i + 1; j < length; j++) {\n            // Executing statement comparison\n            if(list[min].value > list[j].value) {\n                // Updating our current min index to iterate\n                min = j;\n            }\n            this.setState({\n              array: list,\n              active1: list[j].key,\n              active2: list[min].key\n            })\n            await this.timer(2)\n        }\n        \n        // Swaping values\n        if(min !== i) {\n            let temp = list[i];\n            list[i] = list[min];\n            list[min] = temp;\n        }\n    }\n    this.setState({\n      active1: 100,\n      active2: 100\n    })\n  \n    return list;\n  }\n\n  insertionsort = async (list) => {\n    let auxArray = list.slice(); \n    let length = list.length;\n    for (let i = 1; i < length; i++) {\n        let key = list[i];\n        let j = i - 1;\n        while (j >= 0 && list[j].value > key.value) {\n          this.setState({\n            active1: j,\n            active2: key\n          })\n          await this.tim(5);\n          list[j + 1] = list[j];\n          j--;\n        }\n        list[j + 1] = key;\n        this.setState({\n          array: list\n        })\n    }\n    \n    return list;\n  };\n\n\n  onStart=()=>{\n    //const newArray = [...this.state.array];\n\n\n    // for(var i = 0; i<newArray.length; i++){\n    //   newArray[i] = 77;\n    // }\n    // this.setState({active2: 7})\n\n    requestAnimationFrame(this.bubblesort)\n    \n    // let algorithm = this.state.algorithm;\n    // if(algorithm === 'bubblesort'){\n    //   this.bubblesort(this.state.array)\n    // }else if (algorithm === 'selectionsort') {\n    //   this.selectionsort(this.state.array);\n    // }else if(algorithm === 'insertionsort'){\n    //   \n    // }\n  };\n\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header handleNewArray={this.handleNewArray} onStart={this.onStart}/>\n          <Switch>\n            <Route path='/doubleContainer'> \n              <DoubleContainer array={this.state.array} \n                arraySize={this.state.array.length} />\n            </Route>\n            <Route path='/multipleContainer'> \n              <MultipleContainer array={this.state.array} arraySize={this.state.array.length} />\n            </Route>\n            <Route path='/'> \n              <SingleContainer array={this.state.array} \n                arraySize={this.state.array.length} \n                active1={this.state.active1}\n                active2={this.state.active2}\n                algorithm={this.state.algorithm}\n                algorithmSelection={this.algorithmSelection}\n              />\n            </Route>\n          </Switch>\n        </div>\n    </Router>\n  );\n}\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}