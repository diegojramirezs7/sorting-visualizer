{"ast":null,"code":"var _jsxFileName = \"/Users/diego_ramirezs/Documents/sorting/visualizer/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SingleContainer from './components/SingleContainer';\nimport DoubleContainer from './components/DoubleContainer';\nimport MultipleContainer from './components/MultipleContainer';\nimport Header from './components/Header'; //import bubblesort from './algorithms/bubblesort';\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      array: [],\n      active1: 100,\n      active2: 100,\n      algorithm: 'bubblesort'\n    };\n\n    this.handleNewArray = () => {\n      const arr = [];\n\n      for (var i = 0; i < 100; i++) {\n        var rand = Math.ceil(Math.random() * 100);\n        arr.push({\n          key: i,\n          value: rand\n        });\n      }\n\n      this.setState({\n        array: arr\n      });\n    };\n\n    this.algorithmSelection = event => {\n      this.setState({\n        algorithm: event.target.value\n      });\n    };\n\n    this.timer = ms => {\n      return new Promise(res => setTimeout(res, ms));\n    };\n\n    this.bubblesort = async (list, delay) => {\n      const length = list.length;\n\n      for (var i = length - 1; i >= 0; i--) {\n        for (var j = 1; j <= i; j++) {\n          if (list[j - 1].value > list[j].value) {\n            let temp = list[j - 1];\n            list[j - 1] = list[j];\n            list[j] = temp;\n          }\n\n          this.setState({\n            array: list,\n            active1: list[j - 1].key,\n            active2: list[j].key\n          });\n          await this.timer(0);\n        }\n\n        this.setState({\n          active1: 100,\n          active2: 100\n        });\n      }\n\n      return list;\n    };\n\n    this.merge = (left, right) => {\n      let list = [];\n\n      while (left.length && right.length) {\n        if (left[0].value < right[0].value) {\n          list.push(left.shift());\n        } else {\n          list.push(right.shift());\n        }\n\n        var res = [...list, ...left, ...right];\n        this.setState({\n          array: res\n        }); //await this.timer(5);\n      }\n\n      return res;\n    };\n\n    this.mergesort = list => {\n      let half = list.length / 2;\n\n      if (list.length < 2) {\n        return list;\n      }\n\n      const left = list.splice(0, half);\n      let res = this.merge(this.mergesort(left), this.mergesort(list));\n      return res;\n    };\n\n    this.selectionsort = async list => {\n      let length = list.length;\n\n      for (var i = 0; i < length; i++) {\n        var min = i;\n\n        for (var j = i + 1; j < length; j++) {\n          // Executing statement comparison\n          if (list[min].value > list[j].value) {\n            // Updating our current min index to iterate\n            min = j;\n          }\n\n          this.setState({\n            array: list,\n            active1: list[j].key,\n            active2: list[min].key\n          });\n          await this.timer(2);\n        } // Swaping values\n\n\n        if (min !== i) {\n          let temp = list[i];\n          list[i] = list[min];\n          list[min] = temp;\n        }\n      }\n\n      this.setState({\n        active1: 100,\n        active2: 100\n      });\n      return list;\n    };\n\n    this.insertionsort = list => {\n      let length = list.length;\n\n      for (let i = 1; i < length; i++) {\n        let key = list[i].value;\n        let j = i - 1;\n\n        while (j >= 0 && list[j].value > key) {\n          list[j + 1] = list[j];\n          j = j - 1;\n        }\n\n        list[j + 1] = key;\n      }\n\n      return list;\n    };\n\n    this.onStart = () => {\n      let algorithm = this.state.algorithm;\n\n      if (algorithm === 'bubblesort') {\n        this.bubblesort(this.state.array);\n      } else if (algorithm === 'selectionsort') {\n        this.selectionsort(this.state.array);\n      } else if (algorithm === 'insertionsort') {\n        this.insertionsort(this.state.array);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.handleNewArray();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      handleNewArray: this.handleNewArray,\n      onStart: this.onStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/doubleContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DoubleContainer, {\n      array: this.state.array,\n      arraySize: this.state.array.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/multipleContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MultipleContainer, {\n      array: this.state.array,\n      arraySize: this.state.array.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SingleContainer, {\n      array: this.state.array,\n      arraySize: this.state.array.length,\n      active1: this.state.active1,\n      active2: this.state.active2,\n      algorithm: this.state.algorithm,\n      algorithmSelection: this.algorithmSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/diego_ramirezs/Documents/sorting/visualizer/src/App.js"],"names":["React","SingleContainer","DoubleContainer","MultipleContainer","Header","HashRouter","Router","Switch","Route","App","Component","state","array","active1","active2","algorithm","handleNewArray","arr","i","rand","Math","ceil","random","push","key","value","setState","algorithmSelection","event","target","timer","ms","Promise","res","setTimeout","bubblesort","list","delay","length","j","temp","merge","left","right","shift","mergesort","half","splice","selectionsort","min","insertionsort","onStart","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SingleContainer from './components/SingleContainer';\nimport DoubleContainer from './components/DoubleContainer';\nimport MultipleContainer from './components/MultipleContainer';\nimport Header from './components/Header';\n//import bubblesort from './algorithms/bubblesort';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n  state = {\n    array: [], \n    active1: 100,\n    active2: 100,\n    algorithm: 'bubblesort'\n  }\n\n  handleNewArray = () => {\n    const arr = [];\n    for (var i = 0; i<100; i++){\n      var rand = Math.ceil(Math.random() * 100);\n      arr.push({key: i, value: rand});\n    }\n    this.setState({\n      array: arr\n    })\n  }\n\n  componentDidMount(){\n    this.handleNewArray();\n  }\n\n  algorithmSelection = (event) => {\n      this.setState({\n        algorithm: event.target.value\n      })\n    }\n\n  timer = (ms) => {\n    return new Promise(res => setTimeout(res, ms));\n  }\n\n  //bubble sort\n\n  bubblesort = async (list, delay) => {\n    const length = list.length;\n    for(var i = length - 1; i>=0; i--){\n      for(var j = 1; j<=i; j++){\n        \n        if(list[j-1].value > list[j].value){\n          let temp = list[j-1];\n          list[j-1] = list[j];\n          list[j] = temp;\n        }\n        this.setState({\n          array: list,\n          active1: list[j-1].key,\n          active2: list[j].key\n        })\n        await this.timer(0);\n      }\n      this.setState({\n        active1: 100,\n        active2: 100\n      })\n    }\n    return list\n  }\n\n  //merge sort\n\n  merge =  (left, right) => {\n    let list = [];\n    while(left.length && right.length){\n      if(left[0].value < right[0].value){\n        list.push(left.shift());\n      }else{\n        list.push(right.shift());\n      }\n      var res = [...list, ...left, ...right];\n      this.setState({array: res})\n      //await this.timer(5);\n    }\n    return res\n  }\n\n  mergesort = (list) => {\n    let half = list.length/2;\n    if(list.length < 2){\n      return list;\n    }\n\n    const left = list.splice(0,half);\n\n    let res = this.merge(this.mergesort(left), this.mergesort(list));\n    return res\n  }\n\n  selectionsort = async (list) => {\n    let length = list.length;\n  \n    for(var i = 0; i < length; i++) {\n        \n        var min = i;\n        for(var j = i + 1; j < length; j++) {\n            // Executing statement comparison\n            if(list[min].value > list[j].value) {\n                // Updating our current min index to iterate\n                min = j;\n            }\n            this.setState({\n              array: list,\n              active1: list[j].key,\n              active2: list[min].key\n            })\n            await this.timer(2)\n        }\n        \n        // Swaping values\n        if(min !== i) {\n            let temp = list[i];\n            list[i] = list[min];\n            list[min] = temp;\n        }\n    }\n    this.setState({\n      active1: 100,\n      active2: 100\n    })\n  \n    return list;\n  }\n\n  insertionsort = (list) => {\n    let length = list.length;\n    for (let i = 1; i < length; i++) {\n        let key = list[i].value;\n        let j = i - 1;\n        while (j >= 0 && list[j].value > key) {\n            list[j + 1] = list[j];\n            j = j - 1;\n        }\n        list[j + 1] = key;\n    }\n    return list;\n  };\n\n\n  onStart = () => {\n    let algorithm = this.state.algorithm;\n    if(algorithm === 'bubblesort'){\n      this.bubblesort(this.state.array)\n    }else if (algorithm === 'selectionsort') {\n      this.selectionsort(this.state.array);\n    }else if(algorithm === 'insertionsort'){\n      this.insertionsort(this.state.array);\n    }\n  }\n\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header handleNewArray={this.handleNewArray} onStart={this.onStart}/>\n          <Switch>\n            <Route path='/doubleContainer'> \n              <DoubleContainer array={this.state.array} \n                arraySize={this.state.array.length} />\n            </Route>\n            <Route path='/multipleContainer'> \n              <MultipleContainer array={this.state.array} arraySize={this.state.array.length} />\n            </Route>\n            <Route path='/'> \n              <SingleContainer array={this.state.array} \n                arraySize={this.state.array.length} \n                active1={this.state.active1}\n                active2={this.state.active2}\n                algorithm={this.state.algorithm}\n                algorithmSelection={this.algorithmSelection}\n              />\n            </Route>\n          </Switch>\n        </div>\n    </Router>\n  );\n}\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}