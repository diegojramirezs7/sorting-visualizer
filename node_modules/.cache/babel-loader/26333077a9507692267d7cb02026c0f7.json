{"ast":null,"code":"var _jsxFileName = \"/Users/diego_ramirezs/Documents/sorting/visualizer/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport SingleContainer from './components/SingleContainer';\nimport DoubleContainer from './components/DoubleContainer';\nimport MultipleContainer from './components/MultipleContainer';\nimport Header from './components/Header'; //import bubblesort from './algorithms/bubblesort';\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      array: [],\n      active1: 100,\n      active2: 100\n    };\n\n    this.handleNewArray = () => {\n      const arr = [];\n\n      for (var i = 0; i < 100; i++) {\n        var rand = Math.ceil(Math.random() * 100);\n        arr.push({\n          key: i,\n          value: rand\n        });\n      }\n\n      this.setState({\n        array: arr\n      });\n    };\n\n    this.timer = ms => {\n      return new Promise(res => setTimeout(res, ms));\n    };\n\n    this.bubblesort = async (list, delay) => {\n      const length = list.length;\n\n      for (var i = length - 1; i >= 0; i--) {\n        for (var j = 1; j <= i; j++) {\n          if (list[j - 1].value > list[j].value) {\n            let temp = list[j - 1];\n            list[j - 1] = list[j];\n            list[j] = temp;\n          }\n\n          this.setState({\n            array: list,\n            active1: list[j - 1].key,\n            active2: list[j].key\n          });\n          await this.timer(0);\n        }\n\n        this.setState({\n          active1: 100,\n          active2: 100\n        });\n      }\n\n      return list;\n    };\n\n    this.merge = (left, right) => {\n      let list = [];\n\n      while (left.length && right.length) {\n        if (left[0].value < right[0].value) {\n          list.push(left.shift());\n        } else {\n          list.push(right.shift());\n        }\n      }\n\n      let res = [...list, ...left, ...right];\n      this.setState({\n        array: res\n      });\n    };\n\n    this.mergesort = list => {\n      let half = list.length / 2;\n\n      if (list.length < 2) {\n        return list;\n      }\n\n      const left = list.splice(0, half);\n      return this.merge(this.mergeSort(left), this.mergeSort(list));\n    };\n\n    this.onStart = () => {\n      this.mergesort(this.state.array);\n    };\n  }\n\n  componentDidMount() {\n    this.handleNewArray();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      handleNewArray: this.handleNewArray,\n      onStart: this.onStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/doubleContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DoubleContainer, {\n      array: this.state.array,\n      arraySize: this.state.array.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/multipleContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MultipleContainer, {\n      array: this.state.array,\n      arraySize: this.state.array.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SingleContainer, {\n      array: this.state.array,\n      arraySize: this.state.array.length,\n      active1: this.state.active1,\n      active2: this.state.active2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/diego_ramirezs/Documents/sorting/visualizer/src/App.js"],"names":["React","SingleContainer","DoubleContainer","MultipleContainer","Header","HashRouter","Router","Switch","Route","App","Component","state","array","active1","active2","handleNewArray","arr","i","rand","Math","ceil","random","push","key","value","setState","timer","ms","Promise","res","setTimeout","bubblesort","list","delay","length","j","temp","merge","left","right","shift","mergesort","half","splice","mergeSort","onStart","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;;AAEA,SACEC,UAAU,IAAIC,MADhB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;;AAMA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE,GAFH;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADwB;;AAAA,SAOhCC,cAPgC,GAOf,MAAM;AACrB,YAAMC,GAAG,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAC,GAAlB,EAAuBA,CAAC,EAAxB,EAA2B;AACzB,YAAIC,IAAI,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,GAA1B,CAAX;AACAL,QAAAA,GAAG,CAACM,IAAJ,CAAS;AAACC,UAAAA,GAAG,EAAEN,CAAN;AAASO,UAAAA,KAAK,EAAEN;AAAhB,SAAT;AACD;;AACD,WAAKO,QAAL,CAAc;AACZb,QAAAA,KAAK,EAAEI;AADK,OAAd;AAGD,KAhB+B;;AAAA,SAsBhCU,KAtBgC,GAsBvBC,EAAD,IAAQ;AACd,aAAO,IAAIC,OAAJ,CAAYC,GAAG,IAAIC,UAAU,CAACD,GAAD,EAAMF,EAAN,CAA7B,CAAP;AACD,KAxB+B;;AAAA,SA0BhCI,UA1BgC,GA0BnB,OAAOC,IAAP,EAAaC,KAAb,KAAuB;AAClC,YAAMC,MAAM,GAAGF,IAAI,CAACE,MAApB;;AACA,WAAI,IAAIjB,CAAC,GAAGiB,MAAM,GAAG,CAArB,EAAwBjB,CAAC,IAAE,CAA3B,EAA8BA,CAAC,EAA/B,EAAkC;AAChC,aAAI,IAAIkB,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAElB,CAAlB,EAAqBkB,CAAC,EAAtB,EAAyB;AAEvB,cAAGH,IAAI,CAACG,CAAC,GAAC,CAAH,CAAJ,CAAUX,KAAV,GAAkBQ,IAAI,CAACG,CAAD,CAAJ,CAAQX,KAA7B,EAAmC;AACjC,gBAAIY,IAAI,GAAGJ,IAAI,CAACG,CAAC,GAAC,CAAH,CAAf;AACAH,YAAAA,IAAI,CAACG,CAAC,GAAC,CAAH,CAAJ,GAAYH,IAAI,CAACG,CAAD,CAAhB;AACAH,YAAAA,IAAI,CAACG,CAAD,CAAJ,GAAUC,IAAV;AACD;;AACD,eAAKX,QAAL,CAAc;AACZb,YAAAA,KAAK,EAAEoB,IADK;AAEZnB,YAAAA,OAAO,EAAEmB,IAAI,CAACG,CAAC,GAAC,CAAH,CAAJ,CAAUZ,GAFP;AAGZT,YAAAA,OAAO,EAAEkB,IAAI,CAACG,CAAD,CAAJ,CAAQZ;AAHL,WAAd;AAKA,gBAAM,KAAKG,KAAL,CAAW,CAAX,CAAN;AACD;;AACD,aAAKD,QAAL,CAAc;AACZZ,UAAAA,OAAO,EAAE,GADG;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID;;AACD,aAAOkB,IAAP;AACD,KAjD+B;;AAAA,SAmDhCK,KAnDgC,GAmDxB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,UAAIP,IAAI,GAAG,EAAX;;AACA,aAAMM,IAAI,CAACJ,MAAL,IAAeK,KAAK,CAACL,MAA3B,EAAkC;AAChC,YAAGI,IAAI,CAAC,CAAD,CAAJ,CAAQd,KAAR,GAAgBe,KAAK,CAAC,CAAD,CAAL,CAASf,KAA5B,EAAkC;AAChCQ,UAAAA,IAAI,CAACV,IAAL,CAAUgB,IAAI,CAACE,KAAL,EAAV;AACD,SAFD,MAEK;AACHR,UAAAA,IAAI,CAACV,IAAL,CAAUiB,KAAK,CAACC,KAAN,EAAV;AACD;AACF;;AACD,UAAIX,GAAG,GAAG,CAAC,GAAGG,IAAJ,EAAU,GAAGM,IAAb,EAAmB,GAAGC,KAAtB,CAAV;AACA,WAAKd,QAAL,CAAc;AACZb,QAAAA,KAAK,EAAEiB;AADK,OAAd;AAGD,KAhE+B;;AAAA,SAkEhCY,SAlEgC,GAkEnBT,IAAD,IAAU;AACpB,UAAIU,IAAI,GAAGV,IAAI,CAACE,MAAL,GAAY,CAAvB;;AACA,UAAGF,IAAI,CAACE,MAAL,GAAc,CAAjB,EAAmB;AACjB,eAAOF,IAAP;AACD;;AAED,YAAMM,IAAI,GAAGN,IAAI,CAACW,MAAL,CAAY,CAAZ,EAAcD,IAAd,CAAb;AACA,aAAO,KAAKL,KAAL,CAAW,KAAKO,SAAL,CAAeN,IAAf,CAAX,EAAiC,KAAKM,SAAL,CAAeZ,IAAf,CAAjC,CAAP;AACD,KA1E+B;;AAAA,SA4EhCa,OA5EgC,GA4EtB,MAAM;AACd,WAAKJ,SAAL,CAAe,KAAK9B,KAAL,CAAWC,KAA1B;AACD,KA9E+B;AAAA;;AAkBhCkC,EAAAA,iBAAiB,GAAE;AACjB,SAAK/B,cAAL;AACD;;AA4DDgC,EAAAA,MAAM,GAAE;AACN,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAE,KAAKhC,cAA7B;AAA6C,MAAA,OAAO,EAAE,KAAK8B,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWC,KAAnC;AAA0C,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBsB,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,oBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,KAArC;AAA4C,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBsB,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,eAOE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,KAAnC;AACE,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBsB,MAD9B;AAEE,MAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWE,OAFtB;AAGE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CAFF,CADF,CADF;AAsBH;;AAvGiC;;AA2GlC,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport SingleContainer from './components/SingleContainer';\nimport DoubleContainer from './components/DoubleContainer';\nimport MultipleContainer from './components/MultipleContainer';\nimport Header from './components/Header';\n//import bubblesort from './algorithms/bubblesort';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n  state = {\n    array: [], \n    active1: 100,\n    active2: 100\n  }\n\n  handleNewArray = () => {\n    const arr = [];\n    for (var i = 0; i<100; i++){\n      var rand = Math.ceil(Math.random() * 100);\n      arr.push({key: i, value: rand});\n    }\n    this.setState({\n      array: arr\n    })\n  }\n\n  componentDidMount(){\n    this.handleNewArray();\n  }\n\n  timer = (ms) => {\n    return new Promise(res => setTimeout(res, ms));\n  }\n\n  bubblesort = async (list, delay) => {\n    const length = list.length;\n    for(var i = length - 1; i>=0; i--){\n      for(var j = 1; j<=i; j++){\n        \n        if(list[j-1].value > list[j].value){\n          let temp = list[j-1];\n          list[j-1] = list[j];\n          list[j] = temp;\n        }\n        this.setState({\n          array: list,\n          active1: list[j-1].key,\n          active2: list[j].key\n        })\n        await this.timer(0);\n      }\n      this.setState({\n        active1: 100,\n        active2: 100\n      })\n    }\n    return list\n  }\n\n  merge = (left, right) => {\n    let list = [];\n    while(left.length && right.length){\n      if(left[0].value < right[0].value){\n        list.push(left.shift());\n      }else{\n        list.push(right.shift());\n      }\n    }\n    let res = [...list, ...left, ...right];\n    this.setState({\n      array: res\n    })\n  }\n\n  mergesort = (list) => {\n    let half = list.length/2;\n    if(list.length < 2){\n      return list;\n    }\n\n    const left = list.splice(0,half);\n    return this.merge(this.mergeSort(left), this.mergeSort(list));\n  }\n\n  onStart = () => {\n    this.mergesort(this.state.array);\n  }\n\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header handleNewArray={this.handleNewArray} onStart={this.onStart}/>\n          <Switch>\n            <Route path='/doubleContainer'> \n              <DoubleContainer array={this.state.array} arraySize={this.state.array.length}/>\n            </Route>\n            <Route path='/multipleContainer'> \n              <MultipleContainer array={this.state.array} arraySize={this.state.array.length} />\n            </Route>\n            <Route path='/'> \n              <SingleContainer array={this.state.array} \n                arraySize={this.state.array.length} \n                active1={this.state.active1}\n                active2={this.state.active2}\n              />\n            </Route>\n          </Switch>\n        </div>\n    </Router>\n  );\n}\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}